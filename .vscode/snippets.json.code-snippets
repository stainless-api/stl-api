{
  // Place your ts-to-zod workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "convertType-test": {
    "prefix": "convertType-test",
    "body": [
      "import { testCase } from \"./testCase\";",
      "",
      "type T = $1;",
      "",
      "it(",
      "  `$1`,",
      "  testCase({",
      "    __filename,",
      "    expected: `$0`,",
      "  })",
      ");",
      ""
    ]
  },
  "genMutlipleFiles-test": {
    "prefix": "genMultipleFiles-test",
    "body": [
      "import { genMultipleFiles } from \"./genMultipleFiles\";",
      "",
      "type T = $1",
      "",
      "it(`$2`, () =>",
      "  expect(genMultipleFiles({ __filename })).toMatchInlineSnapshot()",
      ");",
      ""
    ]
  }
}
